// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum LifeArea {
  Personal
  Professional
  Health
  Relationships
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  name           String?
  updatedAt      DateTime      @updatedAt
  createdAt      DateTime      @default(now())
  language       String
  goals          Goal[]
  interests      Interest[]    @relation("userInterests")
  achievements   Achievement[] @relation("userAchievements")
  organisation   Organisation? @relation(fields: [organisationId], references: [id])
  organisationId Int?
  chats          Chat[]        @relation("chatParticipants")
  events         Event[]       @relation("userEvents")
}

model Goal {
  id       Int      @id @default(autoincrement())
  deadline DateTime
  title    String
  done     Boolean
  lifeArea LifeArea

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Interest {
  id    Int    @id @default(autoincrement())
  title String
  users User[] @relation("userInterests")
}

model Achievement {
  id    Int    @id @default(autoincrement())
  title String
  users User[] @relation("userAchievements")
}

model Chat {
  id           Int       @id @default(autoincrement())
  participants User[]    @relation("chatParticipants")
  messages     Message[]
  userId       Int?
}

model Message {
  id                Int      @id @default(autoincrement())
  time              DateTime
  content           String
  translatedContent String?
  chatId            Int
  chat              Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model Organisation {
  id       Int    @id @default(autoincrement())
  name     String
  location String
  users    User[]
}

model Event {
  id           Int      @id @default(autoincrement())
  title        String
  time         DateTime
  content      String
  location     String
  participants User[]   @relation("userEvents")
}
